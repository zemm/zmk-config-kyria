/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// Inspired by https://github.com/yannickjmt/zmk-config/blob/master/config/kyria.keymap

#define DEF 0
#define SYM 1
#define NUM 2
#define NAV 3
#define FUN 4
#define LMD 5
#define RMD 6

#define PTAB LC(PG_UP)
#define NTAB LC(PG_DN)
#define NWIN LA(TAB)
#define PWIN LS(LA(TAB))
#define XSLV LA(LC(V))
#define PDESK LC(LG(RIGHT))
#define NDESK LC(LG(LEFT))
#define LR_DOWN LA(DOWN)
#define LR_UP LA(UP)

#define KP_MULT KP_MULTIPLY
#define KP_DIV KP_DIVIDE

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
//	---------------------------------------------------------------------------------------------------------------------------------
//	| ??? | Q   | W   | E   | R   | T   |                             | Y   | U   | I   | O   | P   | -   |
//	| ??? | A   | S   | D   | F   | G   |                             | H   | J   | K   | L   | ;   | '   |
//	| ??? | Z   | X   | C   | V   | B   | ??? | ??? |     | ??? | ??? | N   | M   | ,   | .   | /   | \   |
//	                  | ??? | ??? | ??? | ??? | ??? |     | ??? | ??? | ??? | ??? | ??? |
			bindings = <
	&kp ESC  &kp Q  &kp W  &kp E       &kp R   &kp T                                                     &kp Y   &kp U   &kp I     &kp O   &kp P    &kp MINUS
	&kp BSPC &kp A  &kp S  &kp D       &kp F   &kp G                                                     &kp H   &kp J   &kp K     &kp L   &kp SEMI &kp SQT
	&kp TAB  &kp Z  &kp X  &kp C       &kp V   &kp B       &mo SYM     &mo NUM        &none    &kp RALT  &kp N   &kp M   &kp COMMA &kp DOT &kp FSLH &kp BSLH
	                       &mo FUN     &none   &mo NAV     &kp LSHFT   &mo LMD        &mo RMD  &kp SPACE &kp RET &none   &mo FUN
			>;
		};

		symbol_layer {
//	---------------------------------------------------------------------------------------------------------------------------------
//	| `   | 1   | 2   | 3   | 4   | 5   |                             | 6   | 7   | 8   | 9   | 0   | $   |
//	| ~   | !   | @   | #   | $   | %   |                             | ^   | &   | *   | (   | )   | €   |
//	|     | [   | ]   | LEFT| RIGH|     | --- | --- |     | --- | --- | _   | UP  | DOWN| {   | }   | -   |
//	                  | --- | --- | --- | --- | --- |     | --- | --- | --- | --- | --- |
			bindings = <
	&kp GRAVE &kp N1   &kp N2   &kp N3   &kp N4    &kp N5                                    &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &kp EQUAL
	&kp TILDE &kp EXCL &kp AT   &kp HASH &kp DLLR  &kp PRCNT                                 &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp PLUS
	&none     &kp LBKT &kp RBKT &kp LEFT &kp RIGHT &none     &trans &trans    &trans &to DEF &kp UNDER &kp UP   &kp DOWN &kp LBRC &kp RBRC &kp MINUS
	                            &trans   &trans    &trans    &trans &trans    &trans &trans  &trans    &trans   &trans
			>;
		};

		numpad_layer {
// @TODO: left side completely
//	---------------------------------------------------------------------------------------------------------------------------------
//	|     |     |     | [   | ]   | =   |                             | NML | 7   | 8   | 9   | ^   | $   |
//	|     |     |     | (   | )   | _   |                             | *   | 4   | 5   | 6   | +   | €   |
//	|     |     |     | {   | }   | |   | --- | --- |     | --- | --- | /   | 1   | 2   | 3   | -   | %   |
//	                  | --- | --- | --- | --- | --- |     | --- | 0   | KP, | RET | KP= |
			bindings = <
	&none    &none    &none    &kp LBKT &kp RBKT &kp EQUAL                                   &kp KP_NLCK  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp CARET    &kp DOLLAR
	&none    &none    &none    &kp LPAR &kp RPAR &kp UNDER                                   &kp KP_MULT  &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS  &kp HASH
	&none    &none    &none    &kp LBRC &kp RBRC &kp PIPE  &trans &trans    &trans &to DEF   &kp KP_DIV   &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_MINUS &kp PRCNT
	                           &trans   &trans   &trans    &trans &trans    &trans &kp KP_N0 &kp KP_COMMA &kp KP_ENTER &kp KP_EQUAL
			>;
		};

		navigation_layer {
			bindings = <
	&trans  &kp PTAB  &kp NTAB  &kp PWIN   &kp NWIN    &none                                     &kp PG_UP &kp HOME  &kp UP   &kp END   &kp K_SCROLL_UP   &none
	&trans  &kp LSHFT &kp LGUI  &kp LALT   &kp LCTRL   &kp K_APP                                 &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT &kp K_SCROLL_DOWN &none
	&trans  &kp F2    &kp K_CUT &kp K_COPY &kp K_PASTE &kp XSLV  &trans &trans    &trans &to DEF &none     &kp UP    &kp DOWN &kp NDESK &kp PDESK         &none
	                            &trans     &trans      &to DEF   &trans &trans    &trans &trans  &trans    &to DEF   &to DEF
			>;
		};

		function_layer {
			bindings = <
	&bt BT_SEL 0 &kp F2       &kp C_MUTE   &kp C_VOL_UP &kp C_STOP &reset                                      &kp F12 &kp F7 &kp F8 &kp F9 &rgb_ug RGB_EFF &rgb_ug RGB_TOG
	&bt BT_SEL 1 &kp CAPS     &kp C_PREV   &kp C_VOL_DN &kp C_NEXT &none                                       &kp F11 &kp F4 &kp F5 &kp F6 &rgb_ug RGB_HUI &rgb_ug RGB_BRI
	&bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &kp PSCRN    &kp INS    &bt BT_CLR  &trans &trans    &trans &to DEF &kp F10 &kp F1 &kp F2 &kp F3 &rgb_ug RGB_HUD &rgb_ug RGB_BRD
	                                       &trans       &trans     &trans      &trans &trans    &trans &trans  &trans  &trans &trans
			>;
		};

		left_mods_layer {
			bindings = <
	&none &none     &none    &none    &none     &none                               &trans &trans &trans &trans &trans &trans
	&none &kp LSHFT &kp LGUI &kp LALT &kp LCTRL &none                               &trans &trans &trans &trans &trans &trans
	&none &none     &none    &none    &none     &none &none &none    &trans &to DEF &trans &trans &trans &trans &trans &trans
	                         &none    &none     &none &none &none    &trans &trans  &trans &trans &trans
			>;
		};

		right_mods_layer {
			bindings = <
	&trans &trans &trans &trans &trans &trans                                &none    &none    &none    &none     &none &none
	&trans &trans &trans &trans &trans &trans                                &kp RCTL &kp LALT &kp RGUI &kp RSHFT &none &none
	&trans &trans &trans &trans &trans &trans &trans &trans    &none &to DEF &none    &none    &none    &none     &none &none
	                     &trans &trans &trans &trans &trans    &none &none   &none    &none    &none
			>;
		};
	};
};
